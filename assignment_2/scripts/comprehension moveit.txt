
----- TORSO

# Publish the trajectory to move the torso
self.torso_pub = rospy.Publisher('/torso_controller/command', JointTrajectory, queue_size=10)

# Initialize the MoveIt commander for arm_torso
self.arm_torso_group = MoveGroupCommander("arm_torso")  


----- ARM

# Publish the trajectory to move the arm
self.arm_pub = rospy.Publisher('/arm_controller/command', JointTrajectory, queue_size=10)

# Initialize the MoveIt commander for the arm
self.arm_group = MoveGroupCommander("arm") 

# Initialize the MoveIt commander for the gripper
self.gripper_group = MoveGroupCommander("gripper")  


align_gripper_vertically l.179


pick_object(id, x, y, z)
   arm_safe_pose()
   robot_go_to(object_pos + offset)
   arm_go_to(x, y, z+0.2) #Above the object
   gripper_open()
   #Collision ?
   z_pick = 0
   if id in [7,8,9]: #Triangular prism
      z_pick = gripper_length + 0.019 #gripper 1.9 cm above the object
      #Offset x and y?
   elif id in [4,5,6]: #Cube
      z_pick = gripper_length -  0.035/2
   else:    #Hexagonal prism 
      z_pick = gripper_length -  0.1/2
   arm_go_to(x, y, z_pick)
   gripper_close()
   #Collison?
   arm_go_to(x, y, z+0.2) #Above the object
   arm_safe_pose()
   














